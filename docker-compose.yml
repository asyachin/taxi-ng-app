services:
  backend:
    user: "${UID}:${GID}"
    build:
      context: .
      args:
        - DEV=true
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app
    command: >
      sh -c "python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    environment:
      - PG_HOST=postgres
      - PG_NAME=${POSTGRES_DB}
      - PG_USER=${POSTGRES_USER}
      - PG_PASS=${POSTGRES_PASSWORD}
      - CELERY_BROKER_URL=amqp://mquser:KbhHlr1P8Qfx05rZYA@mq:5672//
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DEBUG=1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: postgres:16.9
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6380:6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  pg_data:
  redis_data:
